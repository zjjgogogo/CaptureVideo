package com.example.capturevideo;import java.io.File;import java.io.FileOutputStream;import android.app.Activity;import android.app.ProgressDialog;import android.content.Context;import android.graphics.Bitmap;import android.graphics.Bitmap.CompressFormat;import android.media.MediaMetadataRetriever;import android.net.Uri;import android.os.AsyncTask;import android.os.Bundle;import android.os.Environment;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.BaseAdapter;import android.widget.ImageView;import android.widget.ListView;public class NextActivity extends Activity {	public static final String KEY_PATH = "KEY_PATH";	ListView mList;	@Override	protected void onCreate(Bundle savedInstanceState) {		super.onCreate(savedInstanceState);		setContentView(R.layout.activity_next);		mList = (ListView) findViewById(R.id.list);		new LoadPicInVideo(this).execute();	}	class LoadPicInVideo extends AsyncTask<Void, Void, Void> {		ProgressDialog mProgressDialog;		Context context;		public LoadPicInVideo(Context context) {			this.context = context;		}		@Override		protected Void doInBackground(Void... params) {			String dataPath = getIntent().getStringExtra(KEY_PATH);			MediaMetadataRetriever retriever = new MediaMetadataRetriever();			retriever.setDataSource(dataPath);			String time = retriever					.extractMetadata(MediaMetadataRetriever.METADATA_KEY_DURATION);			// 取得视频的长度(单位为秒)			int seconds = Integer.valueOf(time) / 250;			// 得到每一秒时刻的bitmap比如第一秒,第二秒			File file = new File("/sdcard/tempVideoPic/");			if (!file.exists()) {				file.mkdirs();			} else {				File[] files = file.listFiles();				for (File mFile : files) {					if (mFile.exists()) {						mFile.delete();					}				}			}			for (int i = 1; i <= seconds; i++) {				Bitmap bitmap = retriever.getFrameAtTime(i * 250 * 1000,						MediaMetadataRetriever.OPTION_CLOSEST_SYNC);				String path = "/sdcard/tempVideoPic/" + i + ".jpg";				FileOutputStream fos = null;				try {					fos = new FileOutputStream(path);					bitmap.compress(CompressFormat.JPEG, 80, fos);					fos.close();				} catch (Exception e) {					e.printStackTrace();				}			}			return null;		}		@Override		protected void onPreExecute() {			super.onPreExecute();			mProgressDialog = new ProgressDialog(context);			mProgressDialog.setCancelable(false);			mProgressDialog.show();		}		@Override		protected void onPostExecute(Void result) {			super.onPostExecute(result);			mProgressDialog.cancel();			File file = new File("/sdcard/tempVideoPic/");			File[] files = file.listFiles();			ImageAdapter mImageAdapter = new ImageAdapter(context, files);			mList.setAdapter(mImageAdapter);		}	}	class ImageAdapter extends BaseAdapter {		File[] files;		Context context;		public ImageAdapter(Context context, File[] files) {			this.files = files;			this.context = context;		}		@Override		public int getCount() {			if (files != null) {				return files.length;			}			return 0;		}		@Override		public Object getItem(int position) {			// TODO Auto-generated method stub			return null;		}		@Override		public long getItemId(int position) {			// TODO Auto-generated method stub			return 0;		}		@Override		public View getView(int position, View convertView, ViewGroup parent) {			if (convertView == null) {				convertView = LayoutInflater.from(context).inflate(						R.layout.list_item_image, null);			}			ImageView image = (ImageView) convertView.findViewById(R.id.image);			image.setImageURI(Uri.fromFile(files[position]));			return convertView;		}	}}